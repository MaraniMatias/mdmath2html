#!/usr/bin/env node

'use strict';

process.title = 'markdown mathjax to html';

var fs = require("fs");
var path = require("path");
var program = require('commander')
  .version(require('../package.json').version)
  .usage('[options] <file ...>')
  .option('-t, --title [title]', 'Title of HTML file.')
  .option('-o, --outDir [outDir]', 'Directory where to save the files.')
  .option('-f, --force', 'Ignore file format.')
  .parse(process.argv);
var build = require('../lib/build.js');

if (program.title) console.log('Html title:', program.title);
for (var i = 0, f = program.args.length; i < f; i++) {
  render(program.args[i]);
}

function render(mdFile) {
  var file = path.parse(mdFile);
  if (/^.(md(tex)?|mark(down|math))$/i.test(file.ext) || program.force) {
    console.log('Markdown File %s to %s', file.base, file.name + '.html\n', 'Dir:', file.dir);
    fs.readFile(mdFile, function(err, data) {
      if (err) throw err;
      fs.writeFile(path.resolve(program.outDir || file.dir, file.name + '.html'), build(data.toString(), program.title || file.name), 'utf8');
    });
  } else {
    console.log('This is not markdown file.\t You can use option -f');
  }
}

// Error
process.on('uncaughtException', function(err) {
  console.error("Exception", err.stack);
});
